#
# This file is programmatically generated by py_writer.py; do not edit
#
def calculate_revenue(
    year,
    inflation_price_increase_factor,
    H2_price_nominal,
    plant_output_kg_per_year,
    percnt_revs,
    start_time,
):
    """For a given year, calculate revenue from H2 sales"""
    if year < 0:
        return 0
    elif year == 1 and start_time < 1:
        return inflation_price_increase_factor * (
            (H2_price_nominal * plant_output_kg_per_year * percnt_revs * start_time)
            + (H2_price_nominal * plant_output_kg_per_year * (1 - start_time))
        )
    elif year <= start_time:
        return (
            H2_price_nominal
            * plant_output_kg_per_year
            * inflation_price_increase_factor
            * percnt_revs
        )
    else:
        return (
            H2_price_nominal
            * plant_output_kg_per_year
            * inflation_price_increase_factor
        )


def get_revenue_h2_sales_column(
    operation_range,
    inflation_price_increase_factors,
    H2_price_nominal,
    plant_output_kg_per_year,
    percnt_revs,
    start_time,
):
    """Revenue from Hydrogen Sales column"""
    return list(
        map(
            lambda year, inflation_price_increase_factor: calculate_revenue(
                year,
                inflation_price_increase_factor,
                H2_price_nominal,
                plant_output_kg_per_year,
                percnt_revs,
                start_time,
            ),
            operation_range,
            inflation_price_increase_factors,
        )
    )
