#
# This file is programmatically generated by py_writer.py; do not edit
#
from .helper_irr import IRR

def irr(cfList):
    return IRR(cfList)

def npv(r, cfList):
    sum_pv = 0
    for i, pmt in enumerate(cfList, start=1):
        sum_pv += pmt / ((1 + r) ** i)
    return sum_pv

def round_num(num, ndigits):
    if ndigits >= 0:
        factor = 10 ** ndigits
        return int(num * factor + 0.5) / factor
    else:
        factor = 10 ** abs(ndigits)
        return int(num / factor + 0.5) * factor

def to_str(num):
    return str(num)

def to_num(str):
    return float(str)

def get(obj, key, default_val=0):
    return obj.get(key, default_val) if isinstance(obj, dict) else (obj[key] if key in obj or (isinstance(key, int) and len(obj) > key) else default_val)

def get_cell(df, row, col):
    return get(get(df, col), row) 

def concat(a, b):
    return a + b

def split(a, b):
    return a.split(b)

def skip(a, b):
    return a[b:]

def slice(a, start=0, end=None):
    return a[start:end]

def length(a):
    return len(a)

def sum_args(*args):
    return sum(args)

def sum_list(a):
    return sum(a)

def num_range(start, end):
    return range(start, end)

def sum_columns(rows):
    columns = zip(*rows)
    return list(map(sum, columns))

def seq_along(a):
    return range(len(a))

def append(a, b):
    a.append(b)
    return a

evaluate = eval

def args_to_list(*args):
    return list(args)

YEAR_1 = 0
YEAR_2 = 1
YEAR_3 = 2
YEAR_4 = 3
FIRST = 0
SECOND = 1
THIRD = 2
